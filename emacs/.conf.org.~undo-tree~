(undo-tree-save-format-version . 1)
"559001cd867b0e40f050b5750862799f91bdfe95"
[nil nil nil nil (25355 31731 787231 507000) 0 nil]
([nil nil ((6184 . 6186) (t 25350 46242 432430 593000)) nil (25355 31731 787229 104000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -6184) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -6185) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 6186) nil (25355 31731 787225 561000) 0 nil])
([nil nil ((2184 . 2185)) nil (25355 31731 787212 884000) 0 nil])
([nil nil ((2215 . 2216)) nil (25355 31731 787211 484000) 0 nil])
([nil nil ((2244 . 2245)) nil (25355 31731 787210 31000) 0 nil])
([nil nil ((2264 . 2265)) nil (25355 31731 787207 544000) 0 nil])
([nil nil ((#("	;(evil-set-initial-state 'org-mode 'emacs)
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block) help-echo nil) 1 2 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil) 2 44 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil)) . 2263) (undo-tree-id33 . -2) (undo-tree-id34 . -7) (undo-tree-id35 . -44) 2270 (t 25355 31044 344264 835000)) nil (25355 31731 787204 684000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6412 . 6413) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (font-lock-comment-face org-block) fontified nil)) . -6455) (6411 . 6456) 6379) nil (25355 31731 787195 447000) 0 nil])
([nil nil ((#("	" 0 1 (font-lock-fontified t src-block t fontified nil rear-nonsticky t font-lock-multiline t face (org-block) help-echo nil)) . -6414) (undo-tree-id32 . -1) (6412 . 6414) 6413) nil (25355 31735 798430 679000) 0 nil])
([nil nil ((6379 . 6381) (#("	" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6379) (undo-tree-id153 . -1) 6380 (6378 . 6380) 6377) nil (25355 31842 264834 438000) 0 nil] [nil nil ((5988 . 5989) (6009 . 6010) (6030 . 6031) (6041 . 6042) (6051 . 6052) (6081 . 6082) (6118 . 6119) (6126 . 6127) (6144 . 6145) (6209 . 6210) (6248 . 6249) (6305 . 6306) (6371 . 6372) (6379 . 6380) (6411 . 6412) (6413 . 6414) 5987 (6410 . 6411)) ((#("
" 0 1 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 6410) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6413) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6411) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6379) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6371) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6305) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6248) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6209) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6144) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6126) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6118) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6081) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6051) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6041) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6030) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6009) (#("	" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 5988)) (25355 31735 797302 413000) 0 nil] [nil nil ((6425 . 6427) (#("	" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6425) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 6426 (5988 . 5989) (6009 . 6010) (6030 . 6031) (6041 . 6042) (6051 . 6052) (6081 . 6082) (6118 . 6119) (6126 . 6127) (6144 . 6145) (6209 . 6210) (6248 . 6249) (6305 . 6306) (6371 . 6372) (6379 . 6380) (6411 . 6412) (6413 . 6414) 5987 (6410 . 6411)) ((#("
" 0 1 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 6410) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6413) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 6411) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6379) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6371) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6305) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6248) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6209) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6144) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6126) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6118) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6081) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6051) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6041) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6030) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6009) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 5988) (6425 . 6426) (#("		" 0 2 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 6425) (undo-tree-id106 . -1) (undo-tree-id107 . -1)) (25355 31731 787181 739000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6380 . 6381) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (font-lock-comment-face org-block) fontified nil)) . -6423) (6378 . 6424) 6370) nil (25355 31842 264829 613000) 0 nil])
nil
nil
([nil nil ((#(";" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil)) . 6381)) nil (25355 31842 264827 33000) 0 nil])
([nil nil ((#("		
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 6423) (undo-tree-id150 . -1) (undo-tree-id151 . -3) (undo-tree-id152 . 1) 6424) nil (25355 31842 264824 790000) 0 nil])
([nil nil ((#("		;(evil-set-initial-state 'org-mode 'emacs)
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3 44 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 44 45 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block))) . 6456) (undo-tree-id137 . -1) (undo-tree-id138 . -45) (undo-tree-id139 . -45) (undo-tree-id140 . -45) (undo-tree-id141 . -45) (undo-tree-id142 . -45) (undo-tree-id143 . -45) (undo-tree-id144 . -45) (undo-tree-id145 . -45) (undo-tree-id146 . -45) (undo-tree-id147 . -45) (undo-tree-id148 . -45) (undo-tree-id149 . -45) 6457) nil (25355 31842 264817 168000) 0 nil])
([nil nil ((5944 . 5948)) nil (25355 31842 264790 290000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -5944) (undo-tree-id133 . -1) (#("n" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -5945) (undo-tree-id134 . -1) (#("n" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -5946) (undo-tree-id135 . -1) (#("n" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -5947) (undo-tree-id136 . -1) 5948) nil (25355 31842 264787 127000) 0 nil])
([nil nil ((#("		(evil-set-initial-state 'org-mode 'emacs)
" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block)) 1 2 (font-lock-fontified t src-block t fontified t rear-nonsticky t help-echo nil font-lock-multiline t face (org-block)) 2 43 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block)) 43 44 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6379) (undo-tree-id130 . -44) (undo-tree-id131 . -43) (undo-tree-id132 . -43)) nil (25355 31842 264776 400000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -6411) (6367 . 6412) 6305) nil (25355 31842 264768 57000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6368) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 6369 (6368 . 6369) (6368 . 6369) 6370) nil (25355 31842 264763 459000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6413) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1)) nil (25355 31842 264729 947000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6368) (undo-tree-id154 . -1) (undo-tree-id155 . 1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (t 25355 31842 267276 376000)) nil (25355 63807 761139 253000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5930 . 5931) (#("
" 0 1 (fontified nil)) . 6485) (5930 . 6486) (t 25355 59375 991330 509000)) ((#("
(defun enlarge-window-diagonally () \"\"
			 (interactive)		 
			 (enlarge-window 1)
			 (enlarge-window-horizontally 1))

(defun shrink-window-diagonally () \"\"
			 (interactive)
			 (shrink-window 1)
			 (shrink-window-horizontally 1))
(global-set-key (kbd \"S-+\") 'enlarge-window)
(global-set-key (kbd \"S--\") 'shrink-window)
(global-set-key (kbd \"M-+\") 'enlarge-window-horizontally)
(global-set-key (kbd \"M--\") 'shrink-window-horizontally)

(global-set-key (kbd \"M-S-+\") 'enlarge-window-diagonally)
(global-set-key (kbd \"M-S--\") 'shrink-window-diagonally)
" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky nil fontified nil) 1 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 2 7 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 7 8 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 8 33 (src-block t help-echo nil face (font-lock-function-name-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 33 37 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 37 39 (src-block t help-echo nil face (font-lock-doc-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 39 40 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 40 44 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 44 45 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 45 56 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 56 57 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 57 59 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 59 60 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil rear-nonsticky t) 60 61 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 61 83 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 83 84 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 84 89 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 89 120 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 120 121 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 121 122 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil rear-nonsticky t) 122 123 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 123 128 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 128 129 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 129 135 (src-block t help-echo nil face (font-lock-function-name-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 135 153 (src-block t help-echo nil face (font-lock-function-name-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 153 157 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 157 159 (src-block t help-echo nil face (font-lock-doc-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 159 160 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 160 165 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 165 176 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 176 177 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 177 178 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 178 200 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 200 211 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 211 235 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 235 236 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 236 237 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 237 257 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 257 258 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 258 259 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 259 262 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 262 265 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 265 280 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 280 281 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil rear-nonsticky t) 281 282 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 282 302 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 302 303 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 303 304 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 304 305 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 305 306 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 306 307 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 307 316 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 316 324 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 324 325 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil rear-nonsticky t) 325 326 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 326 346 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 346 347 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 347 348 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 348 351 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 351 354 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 354 381 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 381 382 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 382 383 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil rear-nonsticky t) 383 384 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 384 404 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 404 405 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 405 406 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 406 407 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 407 408 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 408 409 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 409 412 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 412 438 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 438 439 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 439 440 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 440 441 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 441 442 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 442 462 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 462 463 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 463 466 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 466 469 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 469 472 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 472 497 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 497 498 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 498 499 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil rear-nonsticky t) 499 500 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 500 520 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 520 521 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 521 522 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 522 525 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 525 526 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 526 527 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 527 530 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 530 554 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 554 555 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 555 556 (fontified nil)) . 5930) (undo-tree-id3 . -555) (undo-tree-id4 . -236) (undo-tree-id5 . -236) (undo-tree-id6 . -281) (undo-tree-id7 . -1) (undo-tree-id8 . -555) (undo-tree-id9 . 320) (undo-tree-id10 . -237) (undo-tree-id11 . 277) (undo-tree-id12 . -280) (undo-tree-id13 . -236) (6485 . 6486) (nil rear-nonsticky t 5930 . 5931)) (25355 63809 726375 374000) 0 nil] [nil nil ((5339 . 5340) (t 25355 59375 991330 509000)) ((#("k" 0 1 (fontified t)) . 5339) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) (25355 63069 896238 518000) 0 nil])
([nil nil ((5931 . 5932) (5970 . 5971) (5994 . 5995) (6014 . 6015) (6052 . 6053) (6090 . 6091) (6108 . 6109) (6133 . 6134) (6166 . 6167) (6211 . 6212) (6255 . 6256) (6313 . 6314) (6371 . 6372) (6429 . 6430) 5626) nil (25355 63852 996012 553000) 0 nil])
nil
([nil nil ((#("	" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -6174) (undo-tree-id1291 . -1) 6175 (6173 . 6175) 6138) nil (25355 63852 996009 473000) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 6383) (undo-tree-id1290 . -1)) nil (25355 63852 996007 33000) 0 nil])
([nil nil ((6197 . 6203) (6176 . 6197) (#("/" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6176) (undo-tree-id1289 . -1) 6177 (6176 . 6177) (6174 . 6176) 6174) nil (25355 63852 996004 958000) 0 nil])
([nil nil ((6496 . 6498) (#("y" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6496) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) 6497 (6477 . 6497) (#("n" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6477) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) 6478 (6477 . 6478) (6470 . 6477)) nil (25355 63852 996000 723000) 0 nil])
([nil nil ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6558) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6559) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) 6560 (6556 . 6560)) nil (25355 63852 995952 118000) 0 nil])
([nil nil ((6473 . 6478)) nil (25355 63852 995831 101000) 0 nil])
([nil nil ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 6472) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1)) nil (25355 63852 995829 467000) 0 nil])
([nil nil ((6470 . 6471) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6470) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6471) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#(" " 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6472) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (#("t" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6473) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (#("h" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6474) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6475) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) 6476) nil (25355 63852 995793 53000) 0 nil])
([nil nil ((6470 . 6471)) nil (25355 63852 994366 68000) 0 nil])
([nil nil ((#(" " 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 6472) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1)) nil (25355 63852 996454 95000) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 6470)) nil (25355 63877 728768 715000) 0 nil] [nil nil ((#(")" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 6469) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1)) ((6469 . 6470)) (25355 63852 994284 147000) 0 nil])
([nil nil ((6472 . 6490) (6470 . 6472) (#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6470) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (#("t" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6471) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (#("h" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6472) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6473) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (#(" " 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6474) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (#("f" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6475) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (#("u" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6476) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (#("n" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6477) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (#("c" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6478) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) 6479 (6471 . 6479)) nil (25355 63877 728716 447000) 0 nil])
nil
([nil nil ((#(" " 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 6489) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1)) nil (25355 63877 726941 740000) 0 nil])
([nil nil ((6514 . 6521)) nil (25355 63877 726913 64000) 0 nil])
([nil nil ((6515 . 6523) (#(" " 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6515) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (#("s" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6516) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6517) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) 6518 (6516 . 6518) (#("s" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6516) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6517) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (#("c" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6518) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) 6519 (6518 . 6519) (6515 . 6518)) nil (25355 63877 726895 319000) 0 nil])
([nil nil ((#("	(defun enlarge-window-diagonally () \"\"
				 (interactive)		 
				 (enlarge-window 1)
				 (enlarge-window-horizontally 1))

	(defun shrink-window-diagonally () \"\"
				 (interactive)
				 (shrink-window 1)
				 (shrink-window-horizontally 1))
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 2 7 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 7 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 8 33 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 33 37 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 37 39 (face (font-lock-doc-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 39 40 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 40 41 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 41 45 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 45 46 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 46 57 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 57 58 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 58 60 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 60 61 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t rear-nonsticky t) 61 62 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 62 65 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 65 66 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 66 85 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 85 86 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 86 87 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 87 92 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 92 123 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 123 124 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 124 125 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t rear-nonsticky t) 125 126 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 126 127 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 127 132 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 132 133 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 133 139 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 139 157 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 157 161 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 161 163 (face (font-lock-doc-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 163 164 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 164 165 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 165 170 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 170 181 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 181 182 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 182 183 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 183 184 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 184 206 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 206 209 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 209 210 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 210 218 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 218 242 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 242 243 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 5931) (undo-tree-id2800 . -241) (undo-tree-id2801 . -38) (undo-tree-id2802 . -40) (undo-tree-id2803 . -241) (undo-tree-id2804 . -38) (undo-tree-id2805 . -38) (undo-tree-id2806 . -241) 5969 (t 25355 63877 738544 959000)) nil (25355 63894 892975 287000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2107 . 2108) (#("
" 0 1 (fontified nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) . -2349) (2106 . 2350) 2039) nil (25355 63894 892963 290000) 0 nil])
([nil nil ((#("	" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -2107) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) 2108 (2107 . 2108) (2107 . 2108) 2108) nil (25355 63894 892957 865000) 0 nil])
([nil nil ((2347 . 2348) (#("1" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 2347) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (t 25355 63894 902704 539000)) nil (25355 64259 892154 669000) 0 nil])
([nil nil ((2347 . 2348) (#("2" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 2347) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (t 25355 64259 906804 916000)) nil (25355 64280 501618 897000) 0 nil])
([nil nil ((2347 . 2348) (#("3" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 2347) (t 25355 64280 515067 430000)) nil (25355 64298 143101 164000) 0 nil])
([nil nil ((2347 . 2348) (#("4" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 2347) (2347 . 2348) (#("4" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 2347) (t 25355 64298 155294 130000)) nil (25355 65310 559636 308000) 0 nil])
([nil nil ((2228 . 2229) (#("1" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 2228)) nil (25357 19961 566544 580000) 0 nil])
([nil nil ((5816 . 5819) (#("b" 0 1 (fontified t face org-level-2)) . -5816) (undo-tree-id8 . -1) (#("i" 0 1 (fontified t face org-level-2)) . -5817) (undo-tree-id9 . -1) (#("l" 0 1 (fontified t face org-level-2)) . -5818) (undo-tree-id10 . -1) 5819 (5812 . 5819) (#("	" 0 1 (fontified t)) . -5812) (undo-tree-id11 . -1) 5813 (5812 . 5813) (5811 . 5812) (t 25355 65310 569813 905000) 5593) nil (25358 42490 959557 862000) 0 nil] [nil nil ((#("	" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -6174) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 6175 (6173 . 6175) (t 25355 65310 569813 905000) 6132) ((#("
	" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil) 1 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 6173) (undo-tree-id33 . -1) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -1) (6174 . 6175)) (25357 19961 566135 706000) 0 nil])
([nil nil ((6616 . 6617)) nil (25358 42492 1076 701000) 0 nil])
nil
([nil nil ((#("#+BEGIN_SRC  emacs-lisp
	;; vim key bindings 
	(use-package evil
		:ensure t

		:init
		(setq evil-want-C-u-scroll t)
		(setq evil-want-keybinding nil)

		:config
		(evil-mode 1)
		(define-key evil-insert-state-map (kbd \"TAB\") 'tab-to-tab-stop)

		;; wrapped line is like a new line
		(evil-global-set-key 'motion \"j\" 'evil-next-visual-line)
		(evil-global-set-key 'motion \"k\" 'evil-previous-visual-line)
		(evil-set-initial-state 'org-mode 'emacs)
		:custom
		(evil-undo-system 'undo-tree))

#+END_SRC
" 0 23 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 23 24 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 24 25 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25 28 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 28 46 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 46 48 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 48 59 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 59 60 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 60 64 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 64 67 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 67 74 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 74 80 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 80 85 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 85 89 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 89 93 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 93 121 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 121 125 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 125 155 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 155 162 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 162 220 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 220 225 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 225 248 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 248 251 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 251 283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 283 314 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 314 317 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 317 373 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 373 376 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 376 451 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 451 458 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 458 459 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 459 492 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 492 493 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 493 502 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 502 503 (fontified t face org-block-end-line)) . 6632) (undo-tree-id44 . -2) (undo-tree-id45 . -24) (undo-tree-id46 . -495) (undo-tree-id47 . -495) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -495) 6634) nil (25358 42499 244700 716000) 0 nil] [nil nil ((#("	(use-package evil
		:ensure t

		:init
		(setq evil-want-C-u-scroll t)
		(setq evil-want-keybinding nil)

		:config
		(evil-mode 1)
		(define-key evil-insert-state-map (kbd \"TAB\") 'tab-to-tab-stop)

		;; wrapped line is like a new line
		(evil-global-set-key 'motion \"j\" 'evil-next-visual-line)
		(evil-global-set-key 'motion \"k\" 'evil-previous-visual-line)
		(evil-set-initial-state 'org-mode 'emacs)
		:custom
		(evil-undo-system 'undo-tree))
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 13 14 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14 18 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 18 21 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 21 28 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 28 34 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34 39 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 39 43 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43 47 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 47 75 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 75 79 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 79 109 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 109 116 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 116 174 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 174 179 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 179 202 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 202 205 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 205 237 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 237 268 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 268 271 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 271 327 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 327 330 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 330 405 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 405 412 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 412 413 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 413 446 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 6678) (undo-tree-id0 . -414) (undo-tree-id1 . -413) (undo-tree-id2 . -446) (undo-tree-id3 . -414) (undo-tree-id4 . -1) (undo-tree-id5 . -414) (undo-tree-id6 . -1) (undo-tree-id7 . -414) 7092) ((6678 . 7124)) (25358 42491 649788 310000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5819 . 5820) (#("
" 0 1 (face org-block-end-line fontified nil)) . -6322) (5819 . 6323) 5812) nil (25358 42499 244670 278000) 0 nil])
([nil nil ((5819 . 5820) 5812) ((#("
" 0 1 (fontified t)) . 5819) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1)) (25358 42490 959860 161000) 0 nil])
([nil nil ((5820 . 5821)) nil (25358 42499 244660 455000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5821 . 5822) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -6266) (5820 . 6267)) ((#("
	(use-package evil
		:ensure t

		:init
		(setq evil-want-C-u-scroll t)
		(setq evil-want-keybinding nil)

		:config
		(evil-mode 1)
		(define-key evil-insert-state-map (kbd \"TAB\") 'tab-to-tab-stop)

		;; wrapped line is like a new line
		(evil-global-set-key 'motion \"j\" 'evil-next-visual-line)
		(evil-global-set-key 'motion \"k\" 'evil-previous-visual-line)
		(evil-set-initial-state 'org-mode 'emacs)
		:custom
		(evil-undo-system 'undo-tree))
" 0 1 (fontified t) 1 2 (font-lock-fontified t src-block t fontified nil rear-nonsticky nil) 2 3 (font-lock-fontified t src-block t fontified nil) 3 14 (font-lock-fontified t src-block t fontified nil) 14 15 (font-lock-fontified t src-block t fontified nil) 15 19 (font-lock-fontified t src-block t fontified nil) 19 20 (font-lock-fontified t src-block t fontified nil) 20 22 (font-lock-fontified t src-block t fontified t) 22 29 (font-lock-fontified t src-block t fontified t) 29 35 (font-lock-fontified t src-block t fontified t) 35 40 (font-lock-fontified t src-block t fontified t) 40 44 (font-lock-fontified t src-block t fontified t) 44 48 (font-lock-fontified t src-block t fontified t) 48 76 (font-lock-fontified t src-block t fontified t) 76 80 (font-lock-fontified t src-block t fontified t) 80 110 (font-lock-fontified t src-block t fontified t) 110 117 (font-lock-fontified t src-block t fontified t) 117 175 (font-lock-fontified t src-block t fontified t) 175 180 (font-lock-fontified t src-block t fontified t) 180 203 (font-lock-fontified t src-block t fontified t) 203 206 (font-lock-fontified t src-block t fontified t) 206 238 (font-lock-fontified t src-block t fontified t) 238 269 (font-lock-fontified t src-block t fontified t) 269 272 (font-lock-fontified t src-block t fontified t) 272 328 (font-lock-fontified t src-block t fontified t) 328 331 (font-lock-fontified t src-block t fontified t) 331 406 (font-lock-fontified t src-block t fontified t) 406 413 (font-lock-fontified t src-block t fontified t) 413 414 (font-lock-fontified t src-block t fontified t) 414 446 (font-lock-fontified t src-block t fontified nil) 446 447 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . 5820) (undo-tree-id12 . -2) (undo-tree-id13 . -1) (undo-tree-id14 . -20) (undo-tree-id15 . -446) (undo-tree-id16 . -1) (undo-tree-id17 . -446) (undo-tree-id18 . 445) (undo-tree-id19 . -3) (undo-tree-id20 . 2) (undo-tree-id21 . -446) (undo-tree-id22 . -2) (6266 . 6267) (nil rear-nonsticky t 5821 . 5822)) (25358 42490 959468 475000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 6313) (undo-tree-id57 . -1) (t 25358 42499 255228 671000)) nil (25358 42530 183621 965000) 0 nil])
nil
([nil nil ((6322 . 6323) 6313) nil (25358 42530 183617 410000) 0 nil])
([nil nil ((#("** Plnugins Bindings
" 0 1 (fontified t face org-hide keymap (keymap)) 1 2 (fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (fontified t keymap (keymap) face org-level-2) 3 20 (fontified t face org-level-2) 20 21 (fontified t)) . 7115) (undo-tree-id52 . -4) (undo-tree-id53 . -21) (undo-tree-id54 . -21) (undo-tree-id55 . -21) (undo-tree-id56 . -21) 7119) nil (25358 42530 183613 933000) 0 nil])
([nil nil ((#("** Vanila Bindings
" 0 1 (fontified t face org-hide keymap (keymap)) 1 2 (fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (fontified t keymap (keymap) face org-level-2) 3 18 (fontified t face org-level-2) 18 19 (fontified t)) . 6339) (undo-tree-id51 . -19)) nil (25358 42530 183593 949000) 0 nil])
([nil nil ((6339 . 6340)) nil (25358 42530 183574 84000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -6313) (undo-tree-id58 . -1) 6314 (6312 . 6314) (t 25358 42530 191827 394000) 6280) nil (25358 42547 510534 651000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6271 . 6272) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -6313) (6269 . 6314) 6236 (t 25358 42547 528177 781000)) nil (25358 42587 691234 895000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block) help-echo nil)) . 6298)) nil (25358 42587 691232 692000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block))) . 6297)) nil (25358 42587 691231 930000) 0 nil])
([nil nil ((#("g" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block))) . 6297)) nil (25358 42587 691230 730000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block))) . 6297)) nil (25358 42587 691229 735000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block))) . 6297)) nil (25358 42587 691228 795000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block))) . 6297)) nil (25358 42587 691227 687000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block))) . 6297)) nil (25358 42587 691226 675000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block))) . 6297)) nil (25358 42587 691225 52000) 0 nil])
([nil nil ((6297 . 6307)) nil (25358 42587 691220 89000) 0 nil])
([nil nil ((6000 . 6002) (t 25358 42587 701026 308000)) nil (25358 42989 189038 46000) 0 nil])
([nil nil ((#("j" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6000) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("j" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6001) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 6002) nil (25358 43356 679629 321000) 0 nil])
([nil nil ((6163 . 6164) (t 25358 42989 198353 361000)) nil (25358 43808 523474 662000) 0 nil] [nil nil ((1 . 2) (t 25358 42989 198353 361000)) ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id17 . -1)) (25358 43356 349696 174000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6163) (undo-tree-id22 . -1) 6164) nil (25358 43808 523472 841000) 0 nil])
([nil nil ((1 . 3)) ((#("uu" 0 2 (fontified t)) . 1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) (25358 43355 833723 240000) 0 nil])
([nil nil ((6163 . 6167)) nil (25358 43808 523469 284000) 0 nil])
([nil nil ((3 . 4)) ((#("u" 0 1 (fontified t)) . 3)) (25358 43355 833531 236000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6163) (undo-tree-id18 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6164) (undo-tree-id19 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6165) (undo-tree-id20 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6166) (undo-tree-id21 . -1) 6167) nil (25358 43808 523462 693000) 0 nil])
nil
([nil nil ((#("+" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -5975) (undo-tree-id89 . -1) 5976 (5975 . 5976) (5973 . 5975) (#("	" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 5973) (undo-tree-id90 . -1) 5974 (5972 . 5974) (t 25358 43808 538365 36000) 5939) nil (25358 43871 558364 885000) 0 nil])
([nil nil ((5973 . 5974) (5973 . 5974) (#("		
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 5973) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . 1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -3) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) 5974) nil (25358 43871 558354 429000) 0 nil])
([nil nil ((5974 . 5991) (t 25358 43885 260175 535000)) nil (25358 44027 293451 93000) 0 nil])
([nil nil ((5991 . 6001)) nil (25358 44027 293449 346000) 0 nil])
([nil nil ((#("t" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -5999) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6000) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 6001) nil (25358 44027 293444 778000) 0 nil])
([nil nil ((5999 . 6005)) nil (25358 44027 293307 212000) 0 nil])
([nil nil ((6006 . 6007) (t 25358 44027 303593 564000)) nil (25358 44112 600079 995000) 0 nil])
([nil nil ((5974 . 5975) (#("  " 0 2 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 5974) 5845) nil (25358 44112 600078 255000) 0 nil])
([nil nil ((6006 . 6023)) nil (25358 44112 600076 22000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6021) (undo-tree-id50 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6022) (undo-tree-id51 . -1) 6023) nil (25358 44112 600074 669000) 0 nil])
([nil nil ((6021 . 6022)) nil (25358 44112 600067 947000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6021) (undo-tree-id49 . -1) 6022) nil (25358 44112 600066 159000) 0 nil])
([nil nil ((6021 . 6024)) nil (25358 44112 600063 277000) 0 nil])
([nil nil ((6024 . 6034)) nil (25358 44112 600061 681000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6033) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 6034) nil (25358 44112 600059 46000) 0 nil])
([nil nil ((6033 . 6043)) nil (25358 44112 600026 638000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6042) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . 1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 6043) nil (25358 44112 600022 615000) 0 nil])
([nil nil ((6042 . 6045)) nil (25358 44112 599940 146000) 0 nil])
([nil nil ((6070 . 6071) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6070) (undo-tree-id1 . -1) 6071 (6069 . 6071) (#("	" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6069) (undo-tree-id2 . -1) 6070 (6069 . 6070) (6051 . 6069) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6051) (undo-tree-id3 . -1) 6052 (6047 . 6052) (6045 . 6047) (#("	" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 6045) (undo-tree-id4 . -1) 6046 (6006 . 6007) (#("  " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 6006) 5845 (6045 . 6047) (t 25358 44112 609680 123000) 6005) nil (25358 44517 667758 854000) 0 nil])
([nil nil ((6071 . 6072)) nil (25358 44517 667747 518000) 0 nil])
([nil nil ((#("	" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -6073) (undo-tree-id0 . -1) 6074 (6072 . 6074) 6071) nil (25358 44517 667743 66000) 0 nil])
([nil nil ((6083 . 6100) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -6083) (undo-tree-id5 . -1) 6084 (6075 . 6084) (6073 . 6075) (#("	" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 6073) (undo-tree-id6 . -1) 6074 (6073 . 6074) (6073 . 6074) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 6073) (undo-tree-id7 . -1) (undo-tree-id8 . 1) (t 25358 44517 683821 402000)) nil (25358 44561 669152 342000) 0 nil])
([nil nil ((6233 . 6235)) nil (25358 44561 669127 666000) 0 nil])
([nil nil ((6294 . 6296)) nil (25358 44561 669120 208000) 0 nil])
([nil nil ((6235 . 6236) (t 25358 44561 680939 262000)) nil (25358 44564 845403 787000) 0 nil])
([nil nil ((6297 . 6298)) nil (25358 44564 845398 376000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -7267) (undo-tree-id9 . -1) (#(";" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -7268) (undo-tree-id10 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block))) . -7269) (undo-tree-id11 . -1) 7270 (7267 . 7270) (7266 . 7267) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 7265) (undo-tree-id12 . -1) (7266 . 7267) (7264 . 7266) (t 25358 44564 861020 151000) 7205) nil (25359 62630 521372 879000) 0 nil])
([nil nil ((1651 . 1652) (1639 . 1651) (#("s" 0 1 (fontified t face org-level-1)) . -1639) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t face org-level-1)) . -1640) (undo-tree-id5 . -1) (#("D" 0 1 (fontified t face org-level-1)) . -1641) (undo-tree-id6 . -1) 1642 (1639 . 1642) (#(" " 0 1 (fontified t face org-level-1)) . -1639) (undo-tree-id7 . -1) (#("D" 0 1 (fontified t face org-level-1)) . -1640) (undo-tree-id8 . -1) 1641 (1629 . 1641) (1628 . 1629) 1451) nil (25359 62630 521360 309000) 0 nil])
([nil nil ((1685 . 1686) (1676 . 1685) (1674 . 1676) (1664 . 1674) (#("emacs" 0 5 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -1664) (undo-tree-id2 . -5) 1669 (1654 . 1669) (#("b" 0 1 (fontified t font-lock-fontified t face org-meta-line)) . -1654) (undo-tree-id3 . -1) 1655 (1652 . 1655) (1652 . 1653)) nil (25359 62630 521343 119000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t src-block t face org-block-end-line)) . 1686) (undo-tree-id0 . -1) (undo-tree-id1 . 1)) nil (25359 62630 521605 778000) 0 nil])
([nil nil ((5641 . 5642)) nil (25359 62755 396833 157000) 0 nil] [nil nil ((nil rear-nonsticky nil 1675 . 1676) (#("
" 0 1 (font-lock-fontified t src-block t face org-block-end-line fontified nil)) . -1676) (1675 . 1677)) ((#("

" 0 1 (fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 1 2 (font-lock-fontified t src-block t face org-block-end-line fontified nil)) . 1675) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (1676 . 1677) (nil rear-nonsticky t 1675 . 1676)) (25359 62630 521301 404000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -5641) (undo-tree-id309 . -1) 5642) nil (25359 62755 396831 770000) 0 nil])
nil
([nil nil ((1687 . 1688)) nil (25359 62755 396828 152000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t font-lock-fontified t src-block t)) . -1687) (undo-tree-id308 . -1) 1688) nil (25359 62755 396826 295000) 0 nil])
([nil nil ((#("	(defun enlarge-window-diagonally () \"\"
				 (interactive)		 
				 (enlarge-window 1)
				 (enlarge-window-horizontally 3))

	(defun shrink-window-diagonally () \"\"
				 (interactive)
				 (shrink-window 1)
				 (shrink-window-horizontally 3))
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 8 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8 33 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 33 37 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37 39 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 39 46 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 57 127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 127 132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 132 133 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 133 157 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 157 161 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 161 163 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 163 170 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 170 181 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 181 243 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 2166) (undo-tree-id302 . -206) (undo-tree-id303 . -206) (undo-tree-id304 . -243) (undo-tree-id305 . -206) (undo-tree-id306 . -206) (undo-tree-id307 . -206) 2372) nil (25359 62755 396822 140000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1676 . 1677) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -1918) (1675 . 1919)) nil (25359 62755 396810 335000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 1675) (undo-tree-id300 . -1) (undo-tree-id301 . -1)) nil (25359 62755 396808 275000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face (org-block) src-block t)) . -1675) (undo-tree-id299 . -1) 1676 (1675 . 1676) (1675 . 1676)) nil (25359 62755 396802 245000) 0 nil])
([nil nil ((1927 . 1937) (1920 . 1927) (1918 . 1920) 1882) nil (25359 62755 396799 892000) 0 nil])
([nil nil ((1927 . 1933)) nil (25359 62755 396798 315000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1993) (undo-tree-id212 . -1) (#("v" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1994) (undo-tree-id213 . -1) (#("i" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1995) (undo-tree-id214 . -1) (#("l" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1996) (undo-tree-id215 . -1) (#("-" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1997) (undo-tree-id216 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1998) (undo-tree-id217 . -1) (#("p" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1999) (undo-tree-id218 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -2000) (undo-tree-id219 . -1) (#("n" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -2001) (undo-tree-id220 . -1) (#("-" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -2002) (undo-tree-id221 . -1) (#("b" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -2003) (undo-tree-id222 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -2004) (undo-tree-id223 . -1) (#("l" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -2005) (undo-tree-id224 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -2006) (undo-tree-id225 . -1) (#("w" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -2007) (undo-tree-id226 . -1) (#(")" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -2008) (undo-tree-id227 . -1) (undo-tree-id228 . 1) (undo-tree-id229 . -1) 2009 (1993 . 2009) (1991 . 1993) (1987 . 1991) (#("			" 0 3 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1987) (undo-tree-id230 . -3) 1990 (1987 . 1990) (#("		" 0 2 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1987) (undo-tree-id231 . -2) 1989 (1987 . 1989) (#("	" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1987) (undo-tree-id232 . -1) 1988 (1986 . 1988) (#(";" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -1986) (undo-tree-id233 . -1) 1987 (1984 . 1987) (#("}" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1984) (undo-tree-id234 . -1) (undo-tree-id235 . 1) (undo-tree-id236 . -1) 1985 (1975 . 1985) (#("s" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1975) (undo-tree-id237 . -1) (#("h" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1976) (undo-tree-id238 . -1) (#("r" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1977) (undo-tree-id239 . -1) (#("i" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1978) (undo-tree-id240 . -1) (#("n" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1979) (undo-tree-id241 . -1) 1980 (1977 . 1980) (#("i" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1977) (undo-tree-id242 . -1) (#("r" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1978) (undo-tree-id243 . -1) 1979 (1973 . 1979) (#("	" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1973) (undo-tree-id244 . -1) 1974 (1969 . 1974) (#("				" 0 4 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1969) (undo-tree-id245 . -4) 1973 (1969 . 1973) (#("			" 0 3 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1969) (undo-tree-id246 . -3) 1972 (1969 . 1972) (#("		" 0 2 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1969) (undo-tree-id247 . -2) 1971 (1969 . 1971) (#("	" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1969) (undo-tree-id248 . -1) 1970 (#("(" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1970) (undo-tree-id249 . -1) 1971 (1970 . 1971) (1968 . 1970) (1964 . 1968) (#("e" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1964) (undo-tree-id250 . -1) (#("i" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1965) (undo-tree-id251 . -1) 1966 (1956 . 1966) (1954 . 1956) (#("(" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1954) (undo-tree-id252 . -1) 1955 (1954 . 1955) (#("	" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1954) (undo-tree-id253 . -1) 1955 (1950 . 1955) (#("				" 0 4 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1950) (undo-tree-id254 . -4) 1954 (1950 . 1954) (#("			" 0 3 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1950) (undo-tree-id255 . -3) 1953 (#("(" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1953) (undo-tree-id256 . -1) (#("i" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1954) (undo-tree-id257 . -1) (#("n" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1955) (undo-tree-id258 . -1) (#("t" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1956) (undo-tree-id259 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1957) (undo-tree-id260 . -1) (#("r" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1958) (undo-tree-id261 . -1) (#("a" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1959) (undo-tree-id262 . -1) (#("c" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1960) (undo-tree-id263 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1961) (undo-tree-id264 . -1) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1962) (undo-tree-id265 . -1) (#("v" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1963) (undo-tree-id266 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . -1964) (undo-tree-id267 . -1) (#(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1965) (undo-tree-id268 . -1) (#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1966) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("	" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1967) (undo-tree-id271 . -1) (#("	" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1968) (undo-tree-id272 . -1) (#("	" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1969) (undo-tree-id273 . -1) 1970 (1967 . 1970) (#("		" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1967) (undo-tree-id274 . -2) 1969 (1967 . 1969) (#("	" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1967) (undo-tree-id275 . -1) 1968 (1966 . 1968) (#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1966) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#("	" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1967) (undo-tree-id278 . -1) (#("	" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1968) (undo-tree-id279 . -1) 1969 (1967 . 1969) (#("	" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1967) (undo-tree-id280 . -1) 1968 (1966 . 1968) (1965 . 1966) (1961 . 1965) (1953 . 1961) (1950 . 1953) (#("		" 0 2 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1950) (undo-tree-id281 . -2) 1952 (#("(" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1952) (undo-tree-id282 . -1) (#("i" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1953) (undo-tree-id283 . -1) (#("n" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1954) (undo-tree-id284 . -1) 1955 (1952 . 1955) (1950 . 1952) (#("	" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1950) (undo-tree-id285 . -1) 1951 (#("	" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1951) (undo-tree-id286 . -1) (#("	" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1952) (undo-tree-id287 . -1) (#("	" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1953) (undo-tree-id288 . -1) (#(" " 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1954) (undo-tree-id289 . -1) (#("(" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1955) (undo-tree-id290 . -1) (#("i" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1956) (undo-tree-id291 . -1) (#("n" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1957) (undo-tree-id292 . -1) 1958 (1954 . 1958) (#("	" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1954) (undo-tree-id293 . -1) (#("(" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -1955) (undo-tree-id294 . -1) 1956 (1955 . 1956) (1950 . 1955) (#("				" 0 4 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1950) (undo-tree-id295 . -4) 1954 (1950 . 1954) (#("			" 0 3 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1950) (undo-tree-id296 . -3) 1953 (1950 . 1953) (#("		" 0 2 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1950) (undo-tree-id297 . -2) 1952 (1950 . 1952) (#("	" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1950) (undo-tree-id298 . -1) 1951 (1949 . 1951) (1943 . 1949)) nil (25359 62755 396780 527000) 0 nil])
([nil nil ((#("	(defun salah-easy-curly () \"\"
				 (interactive)
				 (insert \"{\")
				 (
" 0 2 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 2 7 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 7 8 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 8 14 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-function-name-face org-block)) 14 24 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-function-name-face org-block)) 24 28 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 28 30 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-doc-face org-block)) 30 37 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 37 48 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 48 63 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 63 66 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-string-face org-block)) 66 74 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 74 75 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1919) (undo-tree-id80 . 1) (undo-tree-id81 . -73) (undo-tree-id82 . -8) (undo-tree-id83 . -73) (undo-tree-id84 . -73) (undo-tree-id85 . -73) (undo-tree-id86 . -73) (undo-tree-id87 . -73) (undo-tree-id88 . -73) (undo-tree-id89 . -68) (undo-tree-id90 . -75) (undo-tree-id91 . -55) (undo-tree-id92 . -55) (undo-tree-id93 . -55) (undo-tree-id94 . -55) (undo-tree-id95 . -55) (undo-tree-id96 . -55) (undo-tree-id97 . -55) (undo-tree-id98 . -55) (undo-tree-id99 . -55) (undo-tree-id100 . -55) (undo-tree-id101 . -36) (undo-tree-id102 . -36) (undo-tree-id103 . -36) (undo-tree-id104 . -36) (undo-tree-id105 . -36) (undo-tree-id106 . -36) (undo-tree-id107 . -36) (undo-tree-id108 . -36) (undo-tree-id109 . -36) (undo-tree-id110 . -36) (undo-tree-id111 . -8) (undo-tree-id112 . -8) (undo-tree-id113 . -8) (undo-tree-id114 . -8) (undo-tree-id115 . -8) (undo-tree-id116 . -8) (undo-tree-id117 . -8) (undo-tree-id118 . -8) (undo-tree-id119 . -8) (undo-tree-id120 . -8) (undo-tree-id121 . -75) (undo-tree-id122 . -8) (undo-tree-id123 . -73) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (undo-tree-id135 . -8) (undo-tree-id136 . -8) (undo-tree-id137 . -8) (undo-tree-id138 . -8) (undo-tree-id139 . -36) (undo-tree-id140 . -36) (undo-tree-id141 . -36) (undo-tree-id142 . -36) (undo-tree-id143 . -36) (undo-tree-id144 . -36) (undo-tree-id145 . -36) (undo-tree-id146 . -36) (undo-tree-id147 . -36) (undo-tree-id148 . -36) (undo-tree-id149 . -55) (undo-tree-id150 . -55) (undo-tree-id151 . -55) (undo-tree-id152 . -55) (undo-tree-id153 . -55) (undo-tree-id154 . -55) (undo-tree-id155 . -55) (undo-tree-id156 . -55) (undo-tree-id157 . -55) (undo-tree-id158 . -55) (undo-tree-id159 . 2) (undo-tree-id160 . -74) (undo-tree-id161 . -55) (undo-tree-id162 . -55) (undo-tree-id163 . -55) (undo-tree-id164 . -55) (undo-tree-id165 . -55) (undo-tree-id166 . -73) (undo-tree-id167 . -73) (undo-tree-id168 . -73) (undo-tree-id169 . -73) (undo-tree-id170 . -73) (undo-tree-id171 . -73) (undo-tree-id172 . -73) (undo-tree-id173 . -73) (undo-tree-id174 . -73) (undo-tree-id175 . -73) (undo-tree-id176 . -73) (undo-tree-id177 . -73) (undo-tree-id178 . -73) (undo-tree-id179 . -73) (undo-tree-id180 . -73) (undo-tree-id181 . -55) (undo-tree-id182 . -55) (undo-tree-id183 . -55) (undo-tree-id184 . -55) (undo-tree-id185 . -55) (undo-tree-id186 . -55) (undo-tree-id187 . -55) (undo-tree-id188 . -55) (undo-tree-id189 . -55) (undo-tree-id190 . -55) (undo-tree-id191 . -55) (undo-tree-id192 . -55) (undo-tree-id193 . -55) (undo-tree-id194 . -55) (undo-tree-id195 . -55) (undo-tree-id196 . -73) (undo-tree-id197 . -73) (undo-tree-id198 . -73) (undo-tree-id199 . -73) (undo-tree-id200 . -73) (undo-tree-id201 . -73) (undo-tree-id202 . -73) (undo-tree-id203 . -73) (undo-tree-id204 . -73) (undo-tree-id205 . -73) (undo-tree-id206 . -73) (undo-tree-id207 . -73) (undo-tree-id208 . -73) (undo-tree-id209 . -73) (undo-tree-id210 . -73) (undo-tree-id211 . -73) 1992) nil (25359 62755 396576 602000) 0 nil])
([nil nil ((#("=" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-function-name-face org-block))) . -1815) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 1816 (1812 . 1816) (#("s" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-function-name-face org-block))) . -1812) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 1813 (1809 . 1813)) nil (25359 62755 396299 65000) 0 nil])
([nil nil ((1689 . 1690) (#("=" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-function-name-face org-block))) . -1689) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 1690 (1684 . 1690)) nil (25359 62755 396247 381000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -7195) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) 7196 (7189 . 7196) (t 25359 62755 407914 181000)) nil (25359 62768 618901 197000) 0 nil])
([nil nil ((7313 . 7318)) nil (25359 62768 618866 187000) 0 nil])
([nil nil ((7318 . 7319)) nil (25359 62768 618860 532000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1930 . 1931) (#("
" 0 1 (fontified nil)) . -2102) (1930 . 2103) 1914 (t 25359 62768 631951 109000)) nil (25359 63430 777283 369000) 0 nil])
([nil nil ((1931 . 1932)) nil (25359 63430 777281 765000) 0 nil])
([nil nil ((1965 . 1966) (1980 . 1981) (2000 . 2001) (2022 . 2023) (2042 . 2043) (2059 . 2060) (2077 . 2078) 1675) nil (25359 63430 777280 747000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -1931) (undo-tree-id353 . -1) 1932 (1930 . 1932) 1899) nil (25359 63430 777278 799000) 0 nil])
([nil nil ((2033 . 2037) (2012 . 2033) (#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -2012) (undo-tree-id346 . -1) (#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -2013) (undo-tree-id347 . -1) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -2014) (undo-tree-id348 . -1) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -2015) (undo-tree-id349 . -1) 2016 (2009 . 2016) (1993 . 2009) (1972 . 1993) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -1972) (undo-tree-id350 . -1) 1973 (1972 . 1973) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -1972) (undo-tree-id351 . -1) (#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . -1973) (undo-tree-id352 . -1) 1974 (1961 . 1974)) nil (25359 63430 778281 985000) 0 nil])
([nil nil ((#("\"this will open a curly braces and put the cursor inside it properly indented\"" 0 78 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . 1960) (undo-tree-id409 . 78)) nil (25359 63442 981592 835000) 0 nil] [nil nil ((1969 . 1971) (#("	" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 1969) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) 1970 (1677 . 1678) (1722 . 1723) (1744 . 1745) (1772 . 1773) (1807 . 1808) (1856 . 1857) (1871 . 1872) (1898 . 1899) (1932 . 1933) (1960 . 1961) (2039 . 2040) (2062 . 2063) (2076 . 2077) (2106 . 2107) (2120 . 2121) (2145 . 2146) (2160 . 2161) 1675 (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1959) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (1960 . 1961)) ((#("
" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1960) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (1959 . 1960) (#("	" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 2160) (#("	" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 2145) (#("	" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 2120) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 2106) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 2076) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 2062) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 2039) (#("	" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 1960) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1932) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1898) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1871) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1856) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1807) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1772) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1744) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1722) (#("	" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1677) (1969 . 1970) (#("		" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1969) (undo-tree-id388 . -1) (undo-tree-id389 . -1)) (25359 63430 777258 792000) 0 nil])
([nil nil ((1965 . 1966) (1961 . 1965) (#("			" 0 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1961) (undo-tree-id406 . -3) 1964 (1961 . 1964) (#("		" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1961) (undo-tree-id407 . -2) 1963 (1961 . 1963) (#("	" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 1961) (undo-tree-id408 . -1) 1962 (1960 . 1962) 1959) nil (25359 63442 981589 133000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 2042 . 2043) (nil fontified nil 1965 . 2043) (1965 . 2043)) nil (25359 63442 981579 563000) 0 nil])
([nil nil ((#("" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 2043)) nil (25359 63442 981873 347000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -2044) (undo-tree-id416 . -1) 2045 (2043 . 2045) (t 25359 63443 718906 281000) 2042) nil (25359 63466 101412 705000) 0 nil] [nil nil ((#("\"" 0 1 (fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block))) . 2042) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1)) ((2042 . 2043)) (25359 63442 981572 15000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -1961) (undo-tree-id415 . -1) 1962 (1960 . 1962) 1932) nil (25359 63466 101408 245000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 2045) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1)) nil (25359 63466 101404 690000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -2064) (undo-tree-id411 . -1) 2065 (2063 . 2065) 2045) nil (25359 63466 101397 920000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1961) (undo-tree-id410 . -1)) nil (25359 63466 101393 110000) 0 nil])
([nil nil ((1971 . 1980)) nil (25359 63466 101378 628000) 0 nil])
([nil nil ((7695 . 7699) (#("l" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7695) (undo-tree-id417 . -1) (#("r" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7696) (undo-tree-id418 . -1) (#("y" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7697) (undo-tree-id419 . -1) 7698 (7692 . 7698) (#("	" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7692) (undo-tree-id420 . -1) 7693 (7692 . 7693) (7688 . 7692) (7685 . 7688) (7677 . 7685) (#("\"" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-string-face org-block))) . -7677) (undo-tree-id421 . -1) 7678 (7676 . 7678) (#("=" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7676) (undo-tree-id422 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7677) (undo-tree-id423 . -1) 7678 (7676 . 7678) (#("=" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7676) (undo-tree-id424 . -1) 7677 (7673 . 7677) (#("\"" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7673) (undo-tree-id425 . -1) 7674 (7670 . 7674) (7665 . 7670) (7659 . 7665) (#("m" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7659) (undo-tree-id426 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7660) (undo-tree-id427 . -1) (#("d" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7661) (undo-tree-id428 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7662) (undo-tree-id429 . -1) 7663 (#("-" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -7663) (undo-tree-id430 . -1) 7664 (7657 . 7664) (7636 . 7657) (7634 . 7636) (7632 . 7634) (7623 . 7632) (#("e" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block))) . -7623) (undo-tree-id431 . -1) (#("a" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block))) . -7624) (undo-tree-id432 . -1) (#("s" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block))) . -7625) (undo-tree-id433 . -1) (#("y" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block))) . -7626) (undo-tree-id434 . -1) 7627 (7621 . 7627) (#(";" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -7621) (undo-tree-id435 . -1) (#(";" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -7622) (undo-tree-id436 . -1) (#(" " 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -7623) (undo-tree-id437 . -1) 7624 (7621 . 7624) (#("(" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -7621) (undo-tree-id438 . -1) 7622 (7621 . 7622) (#("	" 0 1 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 7622) 6886 (7619 . 7621) (t 25359 63466 111244 913000) 7619) nil (25359 63540 415326 126000) 0 nil])
([nil nil ((1 . 2) (t 25359 63540 432397 370000)) nil (25363 54662 863989 205000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1) (undo-tree-id852 . -1) 2) nil (25363 54662 863987 630000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7700 . 7701) (#("
" 0 1 (fontified nil)) . -7738) (7700 . 7739)) nil (25363 54662 863984 977000) 0 nil])
([nil nil ((7701 . 7702)) nil (25363 54662 863983 727000) 0 nil])
([nil nil ((7730 . 7731) (7709 . 7730) (#("p" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7709) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 7710 (7705 . 7710) (#("l" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7705) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7706) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (#("a" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7707) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("d" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7708) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7709) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (#("r" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7710) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (#(" " 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7711) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (#("k" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7712) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7713) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (#("y" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7714) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (#(" " 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7715) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) 7716 (7702 . 7716) (7700 . 7702) 7700) nil (25363 54662 863955 931000) 0 nil])
([nil nil ((#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -7771) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 7772 (7770 . 7772) 7761) nil (25363 54662 862936 340000) 0 nil])
([nil nil ((7823 . 7824) (#(">" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7823) (undo-tree-id871 . -1) (undo-tree-id872 . 1) (undo-tree-id873 . -1) 7824 (7812 . 7824) (#("|" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7812) (undo-tree-id874 . -1) 7813 (7812 . 7813) (7811 . 7812) (#("<" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7811) (undo-tree-id875 . -1) 7812 (7791 . 7812) (#("g" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7791) (undo-tree-id876 . -1) (#("l" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7792) (undo-tree-id877 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7793) (undo-tree-id878 . -1) (#("b" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7794) (undo-tree-id879 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7795) (undo-tree-id880 . -1) 7796 (7793 . 7796) (7784 . 7793) (#("-" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7784) (undo-tree-id881 . -1) 7785 (7779 . 7785) (#("g" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7779) (undo-tree-id882 . -1) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7780) (undo-tree-id883 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7781) (undo-tree-id884 . -1) 7782 (7773 . 7782) (7771 . 7773) (t 25363 54662 875295 452000) 7771) nil (25363 54767 865441 35000) 0 nil])
([nil nil ((#("a" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 7794)) nil (25363 54767 865419 867000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7795 . 7796) (nil fontified nil 7795 . 7796) (7795 . 7796) 7794) nil (25363 54767 865418 742000) 0 nil])
([nil nil ((7837 . 7844) (#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7837) (undo-tree-id870 . -1) 7838 (7824 . 7838)) nil (25363 54767 865416 432000) 0 nil])
([nil nil ((7783 . 7796) (#("f" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7783) (undo-tree-id853 . -1) (#("i" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7784) (undo-tree-id854 . -1) (#("n" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7785) (undo-tree-id855 . -1) 7786 (7775 . 7786) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7775) (undo-tree-id856 . -1) 7776 (7773 . 7776) (#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7773) (undo-tree-id857 . -1) (#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7774) (undo-tree-id858 . -1) (#(" " 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7775) (undo-tree-id859 . -1) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7776) (undo-tree-id860 . -1) (#("a" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7777) (undo-tree-id861 . -1) (#("s" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7778) (undo-tree-id862 . -1) (#("i" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7779) (undo-tree-id863 . -1) (#("l" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7780) (undo-tree-id864 . -1) (#("y" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7781) (undo-tree-id865 . -1) (#(" " 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7782) (undo-tree-id866 . -1) (#("f" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7783) (undo-tree-id867 . -1) (#("i" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7784) (undo-tree-id868 . -1) (#("n" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7785) (undo-tree-id869 . -1) 7786 (7773 . 7786) (7771 . 7773) 7771) nil (25363 54767 865406 51000) 0 nil])
([nil nil ((#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -7870) (undo-tree-id885 . -1) 7871 (7869 . 7871) (t 25363 54767 877459 731000) 7820) nil (25363 55170 598038 180000) 0 nil])
([nil nil ((#("o" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 7846) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (t 25363 55170 613517 785000)) nil (25363 55183 936504 570000) 0 nil])
([nil nil ((7846 . 7847) (t 25363 55183 953780 22000)) nil (25363 55206 97035 1000) 0 nil])
([nil nil ((1 . 8) (t 25363 55206 118215 229000)) nil (25363 56381 601320 315000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1) (undo-tree-id110 . -1) (#("j" 0 1 (fontified t)) . -2) (undo-tree-id111 . -1) (#("j" 0 1 (fontified t)) . -3) (undo-tree-id112 . -1) (#("j" 0 1 (fontified t)) . -4) (undo-tree-id113 . -1) (#("j" 0 1 (fontified t)) . -5) (undo-tree-id114 . -1) (#("j" 0 1 (fontified t)) . -6) (undo-tree-id115 . -1) (#("j" 0 1 (fontified t)) . -7) (undo-tree-id116 . -1) 8) nil (25363 56381 601318 239000) 0 nil])
([nil nil ((7635 . 7636)) nil (25363 56381 601309 802000) 0 nil])
([nil nil ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7635) (undo-tree-id109 . -1) 7636) nil (25363 56381 601308 764000) 0 nil])
([nil nil ((7636 . 7637)) nil (25363 56381 601306 584000) 0 nil])
([nil nil ((7643 . 7644)) nil (25363 56381 601305 809000) 0 nil])
([nil nil ((7637 . 7638)) nil (25363 56381 601304 439000) 0 nil])
([nil nil ((7874 . 7875) (7872 . 7874) 7802) nil (25363 56381 601303 562000) 0 nil])
([nil nil ((#("(" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 7874) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . 1) (undo-tree-id108 . -1)) nil (25363 56381 601300 839000) 0 nil])
([nil nil ((#("	" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 7873) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1)) nil (25363 56381 601197 667000) 0 nil])
([nil nil ((#("easily open new file" 0 20 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 7779)) nil (25363 56381 601110 798000) 0 nil])
([nil nil ((7790 . 7795) (7789 . 7790) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7789) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 7790 (7779 . 7790)) nil (25363 56381 601108 635000) 0 nil])
([nil nil ((7868 . 7870) 7815) nil (25363 56381 601000 158000) 0 nil])
([nil nil ((7870 . 7884)) nil (25363 56381 600998 828000) 0 nil])
([nil nil ((7884 . 7905)) nil (25363 56381 600998 223000) 0 nil])
([nil nil ((7905 . 7911)) nil (25363 56381 600997 453000) 0 nil])
([nil nil ((#("l" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7909) (undo-tree-id5 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7910) (undo-tree-id6 . -1) 7911) nil (25363 56381 600996 58000) 0 nil])
([nil nil ((7909 . 7922)) nil (25363 56381 600992 823000) 0 nil])
([nil nil ((7922 . 7926)) nil (25363 56381 600992 96000) 0 nil])
([nil nil ((#("c" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7923) (undo-tree-id2 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7924) (undo-tree-id3 . -1) (#("u" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7925) (undo-tree-id4 . -1) 7926) nil (25363 56381 600990 481000) 0 nil])
([nil nil ((7923 . 7928)) nil (25363 56381 600984 473000) 0 nil])
([nil nil ((#("s" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7926) (undo-tree-id0 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7927) (undo-tree-id1 . -1) 7928) nil (25363 56381 600982 558000) 0 nil])
([nil nil ((7926 . 7945)) nil (25363 56381 600947 642000) 0 nil])
([nil nil ((7947 . 7948) (7945 . 7947) (t 25363 56381 616842 208000)) nil (25363 56935 632557 773000) 0 nil])
([nil nil ((#("o" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 7947)) nil (25363 56935 632555 893000) 0 nil])
([nil nil ((#("f" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 7946)) nil (25363 56935 632554 912000) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 7945)) nil (25363 56935 632553 963000) 0 nil])
([nil nil ((6846 . 6859) (6845 . 6846) 6160) nil (25363 56935 632552 893000) 0 nil])
([nil nil ((6157 . 6158) (#("e" 0 1 (face org-level-2 fontified t)) . 6157)) nil (25363 56935 632551 215000) 0 nil])
([nil nil ((6884 . 6893) (6882 . 6884) (6872 . 6882) (#("emacs" 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -6872) (undo-tree-id267 . -5) 6877 (6863 . 6877) (#("G" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -6863) (undo-tree-id268 . -1) (#("E" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -6864) (undo-tree-id269 . -1) 6865 (6863 . 6865) (#("e" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -6863) (undo-tree-id270 . -1) 6864 (6861 . 6864) (#("_" 0 1 (face (doom-themes-org-hash-tag) font-lock-fontified t fontified t)) . -6861) (undo-tree-id271 . -1) 6862 (6860 . 6862) (6859 . 6860)) nil (25363 56935 632547 879000) 0 nil])
([nil nil ((6894 . 6897) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6894) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6895) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) 6896 (6888 . 6896) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6888) (undo-tree-id264 . -1) 6889 (6888 . 6889) (#("-" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6888) (undo-tree-id265 . -1) (#("p" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6889) (undo-tree-id266 . -1) 6890 (6884 . 6890) (6882 . 6884) 6868) nil (25363 56935 632522 313000) 0 nil])
([nil nil ((6159 . 6160)) nil (25363 56935 632319 514000) 0 nil])
([nil nil ((#("j" 0 1 (face org-level-2 fontified t)) . -6159) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) 6160) nil (25363 56935 632315 754000) 0 nil])
([nil nil ((6963 . 6965) (6947 . 6963) (#("p" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6947) (undo-tree-id191 . -1) 6948 (6945 . 6948) (#("(" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6945) (undo-tree-id192 . -1) (#("p" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6946) (undo-tree-id193 . -1) 6947 (6946 . 6947) (6938 . 6946) (6936 . 6938) (#("	" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 6936) (undo-tree-id194 . -1) 6937 (#(":" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -6937) (undo-tree-id195 . -1) 6938 (6937 . 6938) (6935 . 6937) (6930 . 6935) (6926 . 6930) (6910 . 6926) (6908 . 6910) (#("	" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 6908) (undo-tree-id196 . -1) 6909 (6907 . 6909) (6897 . 6907)) nil (25363 56935 632272 760000) 0 nil])
([nil nil ((7009 . 7013) (6988 . 7009) (#("." 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6988) (undo-tree-id127 . -1) (#("p" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6989) (undo-tree-id128 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6990) (undo-tree-id129 . -1) 6991 (6988 . 6991) (6985 . 6988) (#("c" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6985) (undo-tree-id130 . -1) 6986 (6977 . 6986) (6976 . 6977) (#("C" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6976) (undo-tree-id131 . -1) (#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6977) (undo-tree-id132 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6978) (undo-tree-id133 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -6979) (undo-tree-id134 . -1) 6980 (6977 . 6980) (6975 . 6977) (6972 . 6975) (#("		" 0 2 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 6972) (undo-tree-id135 . -2) 6974 (6972 . 6974) (#("	" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 6972) (undo-tree-id136 . -1) 6973 (6971 . 6973) (6966 . 6971) (6964 . 6966) (#("	" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 6964) (undo-tree-id137 . -1) 6965 (6964 . 6965) (6964 . 6965) (#("	
" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 6964) (undo-tree-id138 . 1) (undo-tree-id139 . -2) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1)) nil (25363 56935 632251 99000) 0 nil])
([nil nil ((6975 . 6978) (6971 . 6975)) nil (25363 56935 632118 656000) 0 nil])
([nil nil ((7020 . 7022)) nil (25363 56935 632115 585000) 0 nil])
([nil nil ((7021 . 7023) (#("	" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 7021) (undo-tree-id126 . -1) 7022) nil (25363 56935 632112 437000) 0 nil])
([nil nil ((7023 . 7024)) nil (25363 56935 632105 870000) 0 nil])
([nil nil ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7023) (undo-tree-id125 . -1) 7024) nil (25363 56935 632102 966000) 0 nil])
([nil nil ((7023 . 7028)) nil (25363 56935 632095 623000) 0 nil])
([nil nil ((7028 . 7030)) nil (25363 56935 632092 658000) 0 nil])
([nil nil ((7029 . 7031) (#("	" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 7029) (undo-tree-id124 . -1) 7030) nil (25363 56935 632088 100000) 0 nil])
([nil nil ((7029 . 7032) (#("		" 0 2 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 7029) (undo-tree-id123 . -2) 7031) nil (25363 56935 631992 887000) 0 nil])
([nil nil ((7032 . 7037)) nil (25363 56935 631986 96000) 0 nil])
([nil nil ((7037 . 7038)) nil (25363 56935 631983 660000) 0 nil])
([nil nil ((#("	" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7037) (undo-tree-id122 . -1) 7038) nil (25363 56935 631980 964000) 0 nil])
([nil nil ((7037 . 7042)) nil (25363 56935 631974 472000) 0 nil])
([nil nil ((#("j" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7041) (undo-tree-id121 . -1) 7042) nil (25363 56935 631971 300000) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7040) (undo-tree-id120 . -1) 7041) nil (25363 56935 631964 587000) 0 nil])
([nil nil ((7040 . 7058)) nil (25363 56935 631958 119000) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7057) (undo-tree-id119 . -1) 7058) nil (25363 56935 631954 947000) 0 nil])
([nil nil ((7057 . 7061)) nil (25363 56935 631941 446000) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7059) (undo-tree-id117 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . -7060) (undo-tree-id118 . -1) 7061) nil (25363 56935 631936 707000) 0 nil])
([nil nil ((7059 . 7071)) nil (25363 56935 631911 356000) 0 nil])
([nil nil ((7071 . 7091)) nil (25363 56935 631902 748000) 0 nil])
([nil nil ((7091 . 7094) (t 25363 56935 647394 628000)) nil (25363 56940 881611 223000) 0 nil])
([nil nil ((#("p" 0 1 (face (font-lock-warning-face org-block) font-lock-multiline t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-fontified t fontified t)) . 7093) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1)) nil (25363 56940 881609 168000) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t)) . 7091) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1)) nil (25363 56940 881587 120000) 0 nil])
([nil nil ((#("f" 0 1 (face (font-lock-warning-face org-block) font-lock-multiline t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-fontified t fontified t)) . 7091) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1)) nil (25363 56940 881544 927000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7091 . 7092) (nil fontified nil 7091 . 7092) (7091 . 7092) 7090 (t 25363 56940 907494 726000)) nil (25363 56979 827617 826000) 0 nil])
([nil nil ((#("f" 0 1 (src-block t help-echo "Easy to misread; consider moving the element to the next line" face (font-lock-warning-face org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky t fontified t)) . 7091)) nil (25363 56979 827611 126000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7091 . 7092) (nil fontified nil 7091 . 7092) (7091 . 7092) 7090 (t 25363 56979 844235 646000)) nil (25363 56999 15793 318000) 0 nil])
([nil nil ((#("f" 0 1 (src-block t help-echo "Easy to misread; consider moving the element to the next line" face (font-lock-warning-face org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky t fontified t)) . 7091)) nil (25363 56999 15784 928000) 0 nil])
([nil nil ((7091 . 7093) (t 25363 56999 36600 833000) 7069) nil (25363 57525 699865 24000) 0 nil])
([nil nil ((6963 . 6965) 6936 (7093 . 7164) 6883 (#("	" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 7092) (undo-tree-id343 . -1) 6883 (t 25363 57525 714618 483000) 7090 7068) nil (25363 58081 94621 372000) 0 nil])
([nil nil ((6965 . 7011) 6883) nil (25363 58081 94600 767000) 0 nil])
([nil nil ((#("k" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . -7142) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) 7143 (7142 . 7143) (t 25363 58081 113178 245000)) nil (25363 58125 66088 139000) 0 nil])
([nil nil ((1543 . 1544) (#("z" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 1543) (t 25363 58125 90014 293000)) nil (25364 43652 997706 363000) 0 nil])
([nil current ((1563 . 1571) (#("=" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1563) (undo-tree-id0 . -1) 1564 (1563 . 1564)) nil (25364 43652 997701 53000) 0 nil])
nil
